// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  TRANSPORTER
}

enum VehicleType {
  TRUCK
  VAN
  PICKUP
}

model User {
  id        String    @id @default(uuid()) @db.Uuid
  name      String
  email     String    @unique
  password  String
  phone     String?
  role      UserRole  @default(USER)
  vehicles  Vehicle[]
  routes    Route[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Vehicle {
  id         String         @id @default(uuid()) @db.Uuid
  type       VehicleType
  capacityKg Float
  photos     VehiclePhoto[]
  userId     String         @db.Uuid
  user       User           @relation(fields: [userId], references: [id])
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt

  @@index([userId])
}

model VehiclePhoto {
  id        String   @id @default(uuid()) @db.Uuid
  url       String
  isMain    Boolean  @default(false)
  vehicleId String   @db.Uuid
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([vehicleId])
}

model Route {
  id          String   @id @default(uuid()) @db.Uuid
  origin      Json
  destination Json
  basePrice   Float
  maxWeight   Float?
  isAvailable Boolean  @default(true)
  userId      String   @db.Uuid
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}
